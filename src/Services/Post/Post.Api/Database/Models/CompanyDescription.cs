using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Post.Api.Database.Models
{
    /// <summary>
    /// Company general info representation. 
    /// The content is not generated by the user and is prepopulated by the platform when a new Post is created.
    /// </summary>
    public class CompanyDescription
    {
        [Required(ErrorMessage = "Symbol field must be provided")]
        [StringLength(6, MinimumLength = 2)]
        public string Symbol { get; set; }

        [Required(ErrorMessage = "Company name field must be provided")]
        public string Name { get; set; }

        public string Description { get; set; }

        [Required(ErrorMessage = "Exchange name field must be provided")]
        public string Exchange { get; set; }
        public string Sector { get; set; }
        public string Industry { get; set; }
        public string Country { get; set; }
        public string City { get; set; }
        public string Address { get; set; }
        [Phone]
        public string PhoneNumber { get; set; }

        [Column(TypeName = "varchar(200)")]
        public string WebsiteUrl { get; set; }

        [Column(TypeName = "decimal(3, 3)")]
        public decimal MarketCap { get; set; }

        [Range(0, int.MaxValue, ErrorMessage = "Employees field cannot be negative")]
        public int Employees { get; set; }

        [Range(0, double.MaxValue, ErrorMessage = "Volume field cannot be negative")]
        public decimal Volume { get; set; }

        [Range(0, double.MaxValue, ErrorMessage = "Average Volume field cannot be negative")]
        public decimal AverageVolume { get; set; }

        [Range(0, double.MaxValue, ErrorMessage = "Outstanding Shares field cannot be negative")]
        public decimal SharesOutstanding { get; set; }

        [Range(0, double.MaxValue, ErrorMessage = "Float field cannot be negative")]
        public decimal FloatShares { get; set; }

        public string Currency { get; set; }

        [Range(0, double.MaxValue, ErrorMessage = "Last Price field cannot be negative")]
        public decimal LastPrice { get; set; }
        public decimal Beta { get; set; }
        public decimal PriceToBook { get; set; }
        public decimal PeRatio { get; set; }
        public decimal Eps { get; set; }

    }
}
